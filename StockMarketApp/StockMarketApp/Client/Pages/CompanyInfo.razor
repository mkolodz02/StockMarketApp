@page "/companies/{Ticker}"
@using Microsoft.AspNetCore.Authorization;
@using Newtonsoft.Json;
@using Newtonsoft.Json.Linq;
@using Syncfusion.Blazor.Buttons;
@inject HttpClient httpClient
@inject NavigationManager navigationManager
@attribute [Authorize]

@if(OhlcDataList.Count > 0)
{
    <div class="logo_info">
        <img src="@CompMainData.Logo" alt="Logo" class="logo-img" />

        <div class="main-info">
            <h2><span>Ticker: </span>@CompMainData.Ticker</h2>
            <h3><span>Full name: </span>@CompMainData.Name</h3>
            <h3><span>City: </span>@CompMainData.City</h3>
        </div>
    </div>

    <div class="watchlist-buttons">
        <SfButton @onclick="AddToWatchlist" class="add_to_watchlist_button">+</SfButton>
        <SfButton @onclick="NavigateToWatchlist" class="watchlist-button">Watchlist</SfButton>
    </div>

    <div class="chart-buttons">
        <SfButton @onclick="@(() => ChangeChartDates(3))" class="one-month-button">3 months ago</SfButton>
        <SfButton @onclick="@(() => ChangeChartDates(2))" class="two-month-button">2 months ago</SfButton>
        <SfButton @onclick="@(() => ChangeChartDates(1))" class="three-month-button">1 month ago</SfButton>
    </div>

    <SfStockChart @ref="Chart">
        <StockChartSeriesCollection>
            <StockChartSeries Type="@ChartSeriesType.Candle" DataSource="@OhlcDataList" XName="Date" 
                Open="O" High="H" Low="L" Close="C" Volume="VW"></StockChartSeries>
        </StockChartSeriesCollection>
    </SfStockChart>

    <h3 class="current-date"><span>Date: </span>@CompDailyPrices.From</h3>

    <div class="daily-data">
        <div class="daily-ohlc">
            <h3><span>Open: </span>@CompDailyPrices.Open</h3>
            <h3><span>High: </span>@CompDailyPrices.High</h3>
            <h3><span>Low: </span>@CompDailyPrices.Low</h3>
            <h3><span>Close: </span>@CompDailyPrices.Close</h3>
        </div>
        <div class="daily-rest">
            <h3><span>Volume: </span>@CompDailyPrices.Volume</h3>
            <h3><span>After hours: </span>@CompDailyPrices.AfterHours</h3>
            <h3><span>Pre market: </span>@CompDailyPrices.PreMarket</h3>
        </div>
    </div>
}
else
{
    <img src="https://upload.wikimedia.org/wikipedia/commons/b/b1/Loading_icon.gif?20151024034921" />
}

<style>
    .add_to_watchlist_button, .watchlist-button {
        background-color: red;
    }

    .one-month-button, .two-month-button, .three-month-button{
        background-color: #1ac95a;
    }

</style>

@code {
    [Parameter]
    public string Ticker { get; set; } = null!;
    public CompanyMainDataDto CompMainData { get; set; }
    public DailyPricesDto CompDailyPrices { get; set; }
    public List<OhlcData> OhlcDataList { get; set;  }
    public DateTime CurrentDate { get; set; } //Date of the day before - API limitation
    public string StringCurrentDate { get; set; } = null!;

    public DateTime DefaultTimeFrom { get; set; }
    public SfStockChart? Chart { get; set; }

    protected async override Task OnInitializedAsync()
    {
        CurrentDate = DateTime.Now.AddDays(-3);
        StringCurrentDate = CurrentDate.ToString("yyyy-MM-dd");
        OhlcDataList = new List<OhlcData>();
        CompMainData = new CompanyMainDataDto();
        CompDailyPrices = new DailyPricesDto();

        DefaultTimeFrom = DateTime.Now.AddMonths(-2);

        await GetOhlcData(DefaultTimeFrom, CurrentDate);
        await GetMainData();        
        await GetDailyPrices();

    }

    public async Task GetMainData()
    {
        var result = await httpClient.GetAsync($"https://localhost:7194/api/stocks/stockInfo/{Ticker}");
        var responseBody = await result.Content.ReadAsStringAsync();
        CompMainData = JsonConvert.DeserializeObject<CompanyMainDataDto>(responseBody);
    }

    public async void ChangeChartDates(int monthsBack)
    {
        await GetOhlcData(DefaultTimeFrom.AddMonths(-monthsBack), CurrentDate.AddMonths(-monthsBack));
        Chart.Refresh();
    }

    public async Task GetOhlcData(DateTime from, DateTime to)
    {
        string stringFromDate = from.ToString("yyyy-MM-dd");
        string stringToDate = to.ToString("yyyy-MM-dd");
        var result = await httpClient.GetAsync($"https://localhost:7194/api/stocks/OhlcData/{Ticker}/{stringFromDate}/{stringToDate}");
        var responseBody = await result.Content.ReadAsStringAsync();
        OhlcDataList = JsonConvert.DeserializeObject<List<OhlcData>>(responseBody);
    }

    public async Task GetDailyPrices()
    {
        var result = await httpClient.GetAsync($"https://localhost:7194/api/stocks/DailyPrices/{Ticker}/{StringCurrentDate}");
        var responseBody = await result.Content.ReadAsStringAsync();
        CompDailyPrices = JsonConvert.DeserializeObject<DailyPricesDto>(responseBody);
    }

    public async Task AddToWatchlist()
    {
        WatchlistItem newItem = new WatchlistItem()
        {
            UserLogin = "user",
            CompanyTicker = Ticker
        };

        await httpClient.PostAsJsonAsync("https://localhost:7194/api/watchlist/addToWatchlist", newItem);
        //await NavigateToWatchlist();
    }

    public async Task NavigateToWatchlist()
    {
        navigationManager.NavigateTo("/companies/watchlist");
    }

}
